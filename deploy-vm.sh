#!/bin/bash

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç docker-compose –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

echo "=== –î–µ–ø–ª–æ–π –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É ==="
echo "–î–∞—Ç–∞: $(date)"
echo ""

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /home/nikita/Desktop/DEV/ITMO/lab1/ || {
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
}

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "=== 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ ==="
docker compose down -v --remove-orphans || true
docker system prune -f
echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
echo ""

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤
echo "=== 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ ==="
for port in 5432 27017 8080; do
    if ss -tlnp | grep ":$port " > /dev/null; then
        echo "‚ö†Ô∏è  –ü–æ—Ä—Ç $port —É–∂–µ –∑–∞–Ω—è—Ç"
        echo "–ó–∞–Ω—è–≤—à–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:"
        ss -tlnp | grep ":$port "
    else
        echo "‚úÖ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
done
echo ""

# 3. –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ –≤ firewall
echo "=== 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall ==="
for port in 5432 27017 8080; do
    if ufw status | grep "$port" > /dev/null; then
        echo "‚úÖ –ü–æ—Ä—Ç $port —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –≤ firewall"
    else
        echo "–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ $port –≤ firewall..."
        sudo ufw allow $port 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç $port"
    fi
done
echo ""

# 4. –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ docker-compose
echo "=== 4. –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ ==="
echo "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
docker compose build --no-cache
echo ""

echo "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up -d
echo ""

# 5. –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "=== 5. –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ ==="
echo "–û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL..."
for i in {1..30}; do
    if docker compose exec -T postgres pg_isready -U postgres -d university > /dev/null 2>&1; then
        echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
        break
    fi
    echo "–û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL... ($i/30)"
    sleep 2
done
echo ""

echo "–û–∂–∏–¥–∞–Ω–∏–µ MongoDB..."
for i in {1..30}; do
    if docker compose exec -T mongodb mongosh --eval "print('test')" > /dev/null 2>&1; then
        echo "‚úÖ MongoDB –≥–æ—Ç–æ–≤"
        break
    fi
    echo "–û–∂–∏–¥–∞–Ω–∏–µ MongoDB... ($i/30)"
    sleep 2
done
echo ""

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "=== 6. –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ ==="
docker compose ps
echo ""

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "=== 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ==="
echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 10

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
if curl -f http://localhost:8080/ > /dev/null 2>&1; then
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ http://localhost:8080/"
    echo "üåê –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://$(hostname -I | awk '{print $1}'):8080"
else
    echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    echo "–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    docker compose logs app --tail 20
fi
echo ""

# 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
echo "=== 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ==="
echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã:"
ss -tlnp | grep -E ':(5432|27017|8080)'
echo ""

echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
echo ""

echo "=== –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω ==="
echo "–ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
echo "  ./debug-deployment.sh"
echo "  docker compose logs"
